#!/bin/bash
set -euo pipefail

# === –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ===
export DB_USER=${DB_USER:-tracker}
export DB_PASSWORD=${DB_PASSWORD:-secret}
export DB_NAME=${DB_NAME:-accesstracker}

COMPOSE_FILE="./deploy/docker-compose.yml"

MODE=${1:-}

# === –û—á–∏—Å—Ç–∫–∞ volumes –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ ===
if [[ "$MODE" == "--clean" ]]; then
  echo "üßπ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ + volume (pgdata)..."
  docker compose -f "$COMPOSE_FILE" down --volumes
  echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞."
  exit 0
fi

# === –ì–æ—Ä—è—á–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ API ===
if [[ "$MODE" == "--reload" ]]; then
  echo "‚ôªÔ∏è  –ó–∞–ø—É—Å–∫ —Å hot reload (—Ç–æ–ª—å–∫–æ API), –æ—Å—Ç–∞–ª—å–Ω—ã–µ –≤ —Ñ–æ–Ω–µ..."
  docker compose -f "$COMPOSE_FILE" up --build -d postgres

  pushd source/Assessments.IndigoSoft.AccessTracker
  dotnet watch run
  popd
  exit 0
fi

# === –ü–æ–ª–Ω—ã–π –∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ ===
echo "üöÄ –ó–∞–ø—É—Å–∫ AccessTracker (API + –ë–î)..."
docker compose -f "$COMPOSE_FILE" up --build
